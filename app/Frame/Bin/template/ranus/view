<?php
/**
 * Contains code written by the PT Makmur Berkat Teknologi.
 * Any other use of this code is in violation of copy rights.
 *
 * @package   Matalogix
 * @author    Radianus Raba Ate <ranus@mbteknologi.com>
 * @copyright ${YEAR} PT Makmur Berkat Teknologi.
 */
namespace App\Model\Viewer\\${Name_Space};

use App\Frame\Mvc\AbstractViewerModel;
use App\Model\Dao\\${Name_Space}\\${Class_Name}Dao;
use App\Frame\Gui\FieldSet;
use App\Frame\Gui\Portlet;
use App\Frame\Formatter\Trans;

/**
 * Class to handle the creation of detail ${Class_Name} page
 *
 * @package    app
 * @subpackage Model\Viewer\\${Name_Space}
 * @author     Radianus Raba Ate <ranus@mbteknologi.com>
 * @copyright  ${YEAR} PT Makmur Berkat Teknologi.
 */
class ${Class_Name} extends AbstractViewerModel
{
    /**
     * Constructor to load when there is a new instance created.
     *
     * @param array ${DS}parameters To store the parameter from http.
     */
    public function __construct(array ${DS}parameters)
    {
        # Call parent construct.
        parent::__construct(get_class(${DS}this), '${Page_Route}', '${Reference_Code}');
        ${DS}this->setParameters(${DS}parameters);
    }

    /**
     * Function to do the update of the transaction.;
     *
     * @return void
     */
    protected function doUpdate(): void
    {
        # TODO: Set update colVal data.
    }

    /**
     * Abstract function to load the data.
     *
     * @return array
     */
    public function loadData(): array
    {
        return ${Class_Name}Dao::getByReference(${DS}this->getDetailReferenceValue());
        return ${Class_Name}Dao::getByReferenceAndSystem(${DS}this->getDetailReferenceValue(), ${DS}this->User->getSsId());
    }

    /**
     * Abstract function to load form of the page.
     *
     * @return void
     */
    public function loadForm(): void
    {
        ${DS}this->Tab->addPortlet('general', ${DS}this->getGeneralPortlet());
    }

    /**
     * Function to load the validation role.
     *
     * @return void
     */
    public function loadValidationRole(): void
    {
        if (${DS}this->getFormAction() === null) {
            # TODO: Set the validation rule here.
        } else {
            parent::loadValidationRole();
        }
    }

    /**
     * Function to get the general Field Set.
     *
     * @return Portlet
     */
    private function getGeneralPortlet(): Portlet
    {
        # Instantiate Portlet Object
        ${DS}portlet = new Portlet('', Trans::getWord(''));
        ${DS}portlet->setGridDimension();

        # Instantiate FieldSet Object
        ${DS}fieldSet = new FieldSet(${DS}this->Validation);
        ${DS}fieldSet->setGridDimension();

        # TODO: Create custom field if any.

        # Add field to field set
        # TODO: Add field into field set.

        ${DS}portlet->addFieldSet(${DS}fieldSet);
        return ${DS}portlet;
    }
}
